signals: {}
mappings:
  nk2.knob1:
    targets:
      - layers.canvas.knobA
      - layers.canvas.parameters.knobA.value
    transformFunction: |-
      return value;
    source: 'midi:nk2.knob1'
  nk2.knob2:
    targets:
      - layers.canvas.knobB
      - layers.canvas.parameters.knobB.value
    transformFunction: |-
      return value;
    source: 'midi:nk2.knob2'
  nk2.knob3:
    targets:
      - layers.canvas.knobC
      - layers.canvas.parameters.knobC.value
    transformFunction: |-
      return value;
    source: 'midi:nk2.knob3'
  beatnum100Str:
    targets:
      - layers.vjs.text
    transformFunction: |-
      function (value, old) {
        var names = [
          '#### AUDIO ####',
          'Sick Lincoln (UK) - Remote performance',
          'H.AL.I.C. (BE)',
          'Chaim (US/NL) ',
          'Yaxu (UK/DE)',
          'Alexandra Cárdenas & Camilla Vatne Barratt-Due (CO/NO)',
          'Qirky (UK)',
          'coï¿¥ï¾¡pt (UK) ',
          'Renick Bell (JP)',
          'codepage (DK/DE) ',
          'Hlodver Sigurdsson (IS)',

          '#### VISUAL ####',
          'zeropaper (CH)',
          'Fredrik Olofsson (SE)',
          'Miri Kat (UK)',
        ];

        var index = Math.floor((value * 0.4) % names.length);
        return names[index];
      }
    source: signals.beatA.beatnum
  ft:
    targets:
      - layers.vf.parameters.frametime.value
    transformFunction: 'function(val){return val;}'
    source: clock.frametime
  bn:
    targets:
      - layers.ar.parameters.beat.value
      - layers.vf.parameters.beat.value
    transformFunction: 'function(val){return val % 10;}'
    source: clock.beatnum
layers:
  vjs:
    type: txt
    layerStyles: |-
      text-align: center;
      font-size: 12vmin;
      color: black;
      font-family: monospace;
      text-shadow: 1px 1px 0 #fff
                  ,2px 2px 0 #fff
                  ,3px 3px 0 #fff
                  ,4px 4px 0 #fff
                  ,5px 5px 0 #fff
                  ,6px 6px 0 #fff
                  ,-1px -1px 0 #666
                  ;
    parameters:
      - name: active
        type: boolean
        value: true
        default: true
      - name: text
        type: string
        value: ''
        default: ''
      - name: zIndex
        type: number
        value: 0
        default: 0
  canvas:
    type: canvas
    layerStyles: ''
    updateFunction: |
      var l = bufferLength();
      var _kA = param('knobA', 30);
      var _kB = param('knobB', 30);
      var _kC = param('knobC', 30);
      var f = 0;
      var k = Math.round(_kA * 0.05);
      var p = Math.max(1, k);
      var d = Math.pow(2, p);
      //
      ctx.clearRect(0, 0, width, height);
      grid(l, l / d, function(...args) {
        var color = 'hsl('+ (vol(f) * 3) +', '+ _kB +'%, '+ _kB +'%)';
        ctx.strokeStyle = color;
        // circle(...args, vol(f) * 0.1);
        polygone(...args, vol(f) * _kC * 0.05);
        f++;
      });
    parameters:
      - name: active
        type: boolean
        value: true
        default: true
      - name: clear
        type: number
        value: 1
        default: 1
      - name: knobA
        type: number
        value: 110
        default: 127
      - name: knobB
        type: number
        value: 63
        default: 127
      - name: knobC
        type: number
        value: 63
        default: 127
      - name: zIndex
        type: number
        value: 0
        default: 0
  ar:
    type: SVG
    layerStyles: ''
    svgStyles:
      '#algorave': |-
        transform: translateY(var(--translate-y));
          fill:none;
          stroke:var(--stroke-color);
          stroke-width:var(--stroke-width);
          stroke-dasharray: calc(var(--path-length) * (1 / 20) * var(--beat)) calc(var(--path-length) * (1 / 20) * var(--beat));
          stroke-dashoffset: 0;
    parameters:
      - name: active
        type: boolean
        value: true
        default: true
      - name: beat
        type: any
        value: 5
        default: '0'
      - name: src
        type: string
        value: ./assets/algorave/algorave-stroke.svg
        default: ''
      - name: stroke-color
        type: any
        value: white
        default: white
      - name: stroke-width
        type: any
        value: '22'
        default: '22'
      - name: translate-y
        type: any
        value: '-20vh'
        default: '-20vh'
      - name: zIndex
        type: number
        value: 0
        default: 0
  vf:
    type: SVG
    layerStyles: ''
    svgStyles:
      '#fiha': |-
        transform: translateY(var(--translate-y));
          filter:url(#glow);
          fill:var(--fill-color);
          stroke:var(--stroke-color);
          stroke-width:var(--stroke-width);
          stroke-linecap:round;
          stroke-linejoin:round;
          stroke-dasharray: calc(var(--path-length) * (1 / 20) * var(--beat)) calc(var(--path-length) * (1 / 20) * var(--beat));
          stroke-dashoffset: 0;
    parameters:
      - name: active
        type: boolean
        value: true
        default: true
      - name: beat
        type: any
        value: 5
        default: '0'
      - name: fill-color
        type: any
        value: none
        default: none
      - name: frametime
        type: any
        value: 407950
        default: '0'
      - name: src
        type: string
        value: ./assets/visual-fiha.svg
        default: ''
      - name: stroke-color
        type: any
        value: white
        default: white
      - name: stroke-width
        type: any
        value: '22'
        default: '22'
      - name: translate-y
        type: any
        value: 20vh
        default: 20vh
      - name: zIndex
        type: number
        value: 0
        default: 0
