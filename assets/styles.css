@import "font/vf-embedded.css";

:root {
  --base-color: #fff;
  --bg-color: #272822;
  --bg-color-alt: #222;
  --text-color: #F8F8F2;
  --text-color-alt: #909083;
  --text-color-contrast: #272822;
  --text-color-disabled: #75715E;
  --yes-color: #A6E22E;
  --no-color: #F92672;
  --value-color: #E6DB74;
  --editable-color: #66D9EF;
  --highlight-color: #A581FF;
  --info-color: #e6db74;
  --border-color: #666;
  --spacing: .5rem;
  --spacing-neg: -0.5rem;
  --tabs-border-width: 2px;
}

*,
:after,
:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  vertical-align: middle;
  position: relative;
}
html,
body {
  margin: 0;
  padding: 0;
  line-height: calc(1em + (1 * var(--spacing)));
}

.index-page a,
.index-page a:link,
.index-page a:visited,
.test-page a,
.test-page a:link,
.test-page a:visited {
  color: var(--yes-color);
  text-decoration: none;
  box-shadow: 0 -1px 0 0 var(--bg-color) inset,
              0 -2px 0 0 currentColor inset;
  text-shadow: -3px 1px 0 var(--bg-color),
               3px 1px 0 var(--bg-color),
               -2px 1px 0 var(--bg-color),
               2px 1px 0 var(--bg-color),
               -1px 1px 0 var(--bg-color),
               1px 1px 0 var(--bg-color);
}

.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

.list-unstyled {
  padding: 0;
  list-style: none;
}
.list-inline {
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: row;
}
.list-inline li {
  flex-grow: 1;
  text-align: center;
}




/*
Form
*/
button,
select,
select option,
textarea,
[contenteditable=true],
input:not([type=checkbox]):not([type=radio]) {
  display: inline-block;
  line-height: inherit;
  font-size: inherit;
  padding: var(--spacing);
  margin: 0;
}
button,
select,
textarea,
[contenteditable=true],
input:not([type=checkbox]):not([type=radio]) {
  position: relative;
  color: currentColor;
  border: 1px solid transparent;
  background: transparent;
  box-shadow: 0 0 1px 0 currentColor inset;
}
select option {
  background-color: var(--bg-color);
}
button.no-border {
  border: none;
  box-shadow: none;
}
select,
textarea,
[contenteditable=true],
input:not([type=checkbox]):not([type=radio]) {
  color: var(--editable-color);
}
select[disabled],
textarea[disabled],
[contenteditable=true][disabled],
input[disabled]:not([type=checkbox]):not([type=radio]) {
  color: currentColor;
}


/*this might seems absurd... but the :not selector seems to have "weight"*/
input[type=search]:not([type=checkbox]):not([type=radio]) {
  border-radius: 4em;
  width: 100%;
  padding-left: 1em;
  padding-right: 1em;
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: var(--info-color);
}
input::-moz-placeholder,
textarea::-moz-placeholder {
  color: var(--info-color);
}
input::placeholder,
textarea::placeholder {
  color: var(--info-color);
}
/*
button:hover,
select:hover,
textarea:hover,
[contenteditable=true]:hover,
input:not([type=checkbox]):hover,
input:not([type=radio]):hover {

}

button:focus,
select:focus,
textarea:focus,
[contenteditable=true]:focus,
input:not([type=checkbox]):focus,
input:not([type=radio]):focus {

}

button:error,
select:error,
textarea:error,
[contenteditable=true].error,
input:not([type=checkbox]):error,
input:not([type=radio]):error {

*/
button {
  border-radius: 0.1em;
  cursor: pointer;
}
button[disabled] {
  cursor: not-allowed;
  color: var(--text-color-disabled);
}

button.default {
  background-color: var(--text-color);
  color: var(--text-color-contrast);
}

.yes {
  color: var(--yes-color);
}
.no {
  color: var(--no-color);
}
button.yes,
button.no {
  color: var(--text-color-contrast);
}
button.yes {
  border: 1px solid var(--yes-color);
  background-color: var(--yes-color);
}
button.no {
  border: 1px solid var(--no-color);
  background-color: var(--no-color);
}
input:not([type=radio]):not([type=checkbox]) {
  /* border-bottom: 1px dashed currentColor; */
}

/*
blinking
*/
.blink {
  animation-duration: 1.2s;
  animation-name: blink;
}
@keyframes blink {
  0% {
    box-shadow: 0 0 var(--spacing) var(--spacing) var(--highlight-color) inset;
  }

  33% {
    box-shadow: 0 0 0 0 var(--highlight-color) inset;
  }

  66% {
    box-shadow: 0 0 calc(var(--spacing) * 0.5) calc(var(--spacing) * 0.5) var(--highlight-color) inset;
  }

  100% {
    box-shadow: 0 0 0 0 var(--highlight-color) inset;
  }
}

/*
Grid
*/
.rows,
.columns {
  display: flex;
}

.rows > .row,
.columns > .column {
  position: relative;
}

.rows {
  flex-direction: column;
  overflow-x: auto;
}
.row {
  flex-grow: 1;
}

.row.columns {}

.columns {
  flex-direction: row;
  overflow-y: auto;
}
.column {
  flex-grow: 1;
}
.column.rows {}

.no-grow:empty {
  display: none;
}
.row.no-grow,
.column.no-grow {
  flex-grow: 0;
}
.row.grow-l,
.column.grow-l {
  flex-grow: 2;
}
.row.grow-xl,
.column.grow-xl {
  flex-grow: 3;
}

.table {
  display: table;
  table-layout: fixed;
}
.t-row {
  display: table-row;
}
.t-cell {
  display: table-cell;
}

.gutter:not(input) {
  padding: var(--spacing);
}
.gutter-left:not(input) {
  padding-left: var(--spacing);
}
.gutter-top:not(input) {
  padding-top: var(--spacing);
}
.gutter-horizontal:not(input) {
  padding-left: var(--spacing);
  padding-right: var(--spacing);
}
.gutter-right:not(input) {
  padding-right: var(--spacing);
}
.gutter-bottom:not(input) {
  padding-bottom: var(--spacing);
}
.gutter-vertical:not(input) {
  padding-top: var(--spacing);
  padding-bottom: var(--spacing);
}

input.gutter {
  margin: var(--spacing);
}
input.gutter-left {
  margin-left: var(--spacing);
}
input.gutter-top {
  margin-top: var(--spacing);
}
input.gutter-horizontal {
  margin-left: var(--spacing);
  margin-right: var(--spacing);
}
input.gutter-right {
  margin-right: var(--spacing);
}
input.gutter-bottom {
  margin-bottom: var(--spacing);
}
input.gutter-vertical {
  margin-top: var(--spacing);
  margin-bottom: var(--spacing);
}

.column > input:not([type=checkbox]):not([type=radio]),
.column > select,
.column > textarea {
  width: 100%;
  /* margin: calc(0 - var(--spacing)); */
}
.column > label:after {
}

/*
Layout
*/
.index-page,
.test-page,
.controller-app {
  font-size: 13px;
  font-family: sans-serif;
  color: var(--text-color);
  background-color: var(--bg-color);
  font-weight: 400;
}
.controller-app:after {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--bg-color);
  will-change: opacity;
}
.controller-app.bootstraped:after {
  opacity: 0.5;
}
.controller-app.initialized.bootstraped:after {
  display: none;
}

.index-page .page-content {
  font-size: 1.2vw;
  max-width: 750px;
  margin: auto;
  padding: 1vw;
  color: var(--text-color);
}
@media (max-width: 1280px) {
  .index-page .page-content {
    font-size: 15.5px;
  }
}

.index-page hr {
  height: 0;
  border-color: var(--text-color-disabled)
}
.index-page pre:first-child {
  display: block;
  margin: auto;
  text-align: center;
  font-size: 10px;
  color: var(--highlight-color);
}
.index-page pre:first-child > code {
  display: inline-block;
  margin: auto;
  text-align: left;
}

.index-page h1,
.index-page h2,
.index-page h3,
.index-page h4,
.index-page h5 {
  margin-top: 1.3em;
  font-weight: 100;
  color: var(--text-color);
}

.controller {
  width: 100%;
  height: 100%;
  overflow: hidden;
  margin: 0;
  padding: 0;
  font-size: 13px;
  font-family: sans;
  color: var(--text-color);
  background-color: var(--bg-color);
}
.controller a,
.controller a:link,
.controller a:visited {
  color: var(--yes-color);
}

.region-right {}

.region-right-top {}

.region-right-bottom {}

.region-left {}

.region-left-top {}

.region-left-bottom {
}

.region {
  display: flex;
  flex-direction: column;
}
.region > .region-tabs {
}

.region > .region-content {
  display: flex;
  flex-direction: column;
  overflow: auto;
}

.code-editor > header {
  flex-grow: 0;
}
.code-editor .editor-holder {
  overflow: hidden;
  height: calc(100% - 37px);
}

.code-editor.autoapply .ace-editor {
  height: 100%;
}
.code-editor.autoapply .ace-controls {
  display: none;
}
.code-editor .editor-info {
  width: 20%;
}
.code-editor .shortcuts li {
  display: flex;
  flex-direction: row;
}
.code-editor .shortcuts ul {
  padding: 0;
}
.code-editor .shortcuts li > label {
  flex-grow: 1;
}
.code-editor .shortcuts li > div {
  flex-grow: 0;
  text-align: right;
}
.code-editor .shortcuts .keys {
  color: var(--text-color-alt);
}

.code-editor .property {
  color: var(--info-color);
}
.code-editor .function {
  color: var(--editable-color);
}

.tabs {
  padding: 0;
  margin: 0 0 var(--tabs-border-width) 0;
  box-shadow: 0 var(--tabs-border-width) 0 0 var(--border-color),
              0 0 var(--spacing) 0 rgba(200,200,200,0.2) inset;
  background-color: rgba(122,122,122,0.1);
}
.tabs > li {
  float: left;
  cursor: pointer;
  margin: var(--tabs-border-width) var(--spacing) 0 var(--spacing);
  box-shadow: 0 0 0 0 var(--border-color),
              0 0 var(--spacing) 0 rgba(0,0,0,1) inset;
  background-color: var(--bg-color);
  transition: box-shadow 0.218s ease;
}

.tabs > li div {
  white-space: nowrap;
  max-width: 120px;
  overflow: hidden;
  text-overflow: ellipsis;
  direction: rtl;
}
.tabs > li:last-child {
  margin-right: 0;
}
.tabs > li:hover {
  box-shadow: 0 var(--tabs-border-width) 0 0 var(--info-color),
              0 0 var(--spacing) 0 rgba(0,0,0,1) inset;
}
.tabs > li.active {
  cursor: default;
  box-shadow: 0 var(--tabs-border-width) 0 0 var(--highlight-color),
              0 0 var(--spacing) 0 rgba(0,0,0,1) inset;
}



.default-layer-control {}

.canvas-control .new-layer,
.canvas-control .layers > .items {
  background-color: var(--bg-color);
}
.canvas-control .new-layer,
.canvas-control .layers > .items {
  margin-left: 10%;
}
.canvas-control .layers > .items {
  /*border: 1px solid var(--text-color-disabled);*/
}
.canvas-control .layers > .items:empty {
  /*border: none;*/
}
.canvas-control .layers {
  padding-bottom: var(--spacing);
  /*border-bottom: 1px solid var(--text-color-disabled);*/
}

.header {
  border-bottom: 1px solid var(--border-color);
  min-height: 32px;
}

.header .column {
}

.controller > .body > div:first-child {
  width: 50%;
  max-height: 100%;
  border-right: 1px solid var(--border-color);
}
.controller > .body > div:last-child {
  border-left: 1px solid var(--border-color);
}

.debug {
  min-width: 400px;
  border-top: 1px solid var(--border-color);
  flex-grow: 2;
}

.settings {
  max-width: 50%;
  min-width: 480px;
}
.settings > .columns > .column {
  width: 100%;
  min-height: 30px;
  min-width: 200px;
}

/*
MIDI
*/
.midi-access {
  font-family: monospace;
}

.midi-inputs,
.midi-outputs {}

.midi-inputs {}
.midi-outputs {}

.midi-access ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.midi-access li.active {
  background-color: var(--highlight-color);
}

/*
Canvas layer controls
*/
.section-name {
  text-transform: uppercase;
  border-top: 1px solid;
  border-bottom: 1px solid;
}
/*
.signal,
.canvas-layer,
.mappings-view .items {
  border-top: 1px solid var(--text-color-disabled);
  border-bottom: 1px solid var(--bg-color);
  margin-bottom: 0;
}
*/
.row.layers {
  border-right: 1px solid var(--text-color-disabled);
}

.signal:last-child,
.canvas-layer:last-child {
  border-bottom: none;
  margin-bottom: 0;
}

.signal:hover,
.canvas-layer:hover {
}

section {
  box-shadow: 0 0 1px 0 #000 inset,
              0 0 1px 0 currentColor;
}
section.disabled {
  cursor: default;
  color: var(--text-color-disabled);
}
section.disabled button {
  transition: color 0.218s ease-in-out;
}
section.disabled:hover button {
  color: var(--text-color);
}
.canvas-layer .vfi-trash-empty {
  opacity: 0;
  transition: opacity 0.218s ease-in-out;
}
.canvas-layer:hover .vfi-trash-empty {
  opacity: 1;
}
header h3,
header h5 {
  margin: 0;
  font-weight: 400;
  padding: var(--spacing);
}
header h3 {
  cursor: pointer;
}
header > .column.no-grow {
  /* padding: 0; */
}
header h3 {
  flex-grow: 2;
}
header .layer-type {
  width: 20%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 1;
  text-align: center;
}
header .layer-type span,
h3 small {
  display: block;
  border-radius: calc(var(--spacing) * 0.5);
  background-color: var(--info-color);
  color: var(--text-color-contrast);
  padding: 2px 4px;
}

h3 small {
  display: inline-block;
  vertical-align: super;
}
header h3 span:before,
header h3 span:after {
  content: '"';
  display: inline;
}

.object-prop {}

.parameter-name {
  width: 120px;}

.parameter-value {
  width: 100px;
}
.parameter-value input {
  margin: auto;
  max-width: 100%;
}
.parameter-toggle-btn {
  width: 100%;
}

.result-dot,
.result-dot:empty,
.signal-color .result-color {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  line-height: 1.25em;
  overflow: hidden;
  text-align: center;
}
.result-dot {
  border-radius: 100%;
  color: var(--text-color-contrast);
}
.result-dot.active {
  background-color: var(--info-color);
}

.signal-beat .detector {
  padding: var(--spacing);
}
.signal-beat .detector button {
  padding: 1rem;
  width: 10vmax;
  height: 10vmax;
  margin: var(--spacing) auto;
  display: block;
  text-align: center;
  border-radius: var(--spacing);
  background-color: var(--info-color);
  color: var(--text-color-alt);
}

.control-screen {
  border: none;
}
/*
.controller .screen {
  background: url(bgk-pattern.png) repeat;
}
*/
/*
.timeline {
  min-height: 100px;
  height: 100%;
}
.timeline .canvas-wrapper {
  position: relative;
}
.timeline canvas {
  position: absolute;
  width: 100%;
  height: 100%;
}

.timeline-graph {
  background-color: #000;
}
*/



/*
suggestion widget
*/
.suggestion-view {
  position: absolute;
  overflow: auto;
  background: var(--bg-color);
  list-style: none;
  overflow: auto;
  z-index: 1000;
  padding: 0;
  margin: 0;
  box-shadow: 0 1px 2px 2px #000;
  max-height: 50vh;
}
.suggestion-view li {
  padding: var(--spacing);
  cursor: pointer;
  text-align: inherit;
}
.suggestion-view li:hover {
  color: var(--highlight-color);
}
.suggestion-view li.active {
  background-color: var(--highlight-color);
}
.suggestion-view li.active:hover {
  color: var(--text-color);
}

/*
UI state
*/
.focused {}

.highlighted {
  background-color: var(--highlight-color);
}

.dependency {}
.dependent {}

/*
.mappings-view
*/
.mappings-view {
  flex-grow: 0;
  display: flex;
  flex-direction: column;
}

.mappings-view header,
.mappings-view .items {
  flex-grow: 0;
}

.mappings-view .emitter-name {
  width: 120px;
  flex-grow: 0;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.mappings-view .items {
  overflow-y: auto;
}

.mapping-emitter-view {
  padding: 0 0 var(--spacing) 0;
}
.mapping-emitter-view > div {
  margin: 0 calc(var(--spacing) * 2);
  border: 1px solid var(--text-color-disabled);
  border-width: 1px 1px 0 3px;
}
.mapping-emitter-view > .items {
  border: 1px solid var(--text-color-disabled);
  border-width: 0 1px 1px 3px;
}
.mapping-emitter-view > .items:empty {
  display: none;
}

/*
details
*/
.details.row {
  max-height: 35vh;
  overflow-y: auto;
}

.details .param-section {

}
.details .param-section > h5 {
  padding: 0 var(--spacing);
}

/*
SVG layer
*/
.layer-svg > svg {
  width: 100%;
  height: 100%;
  transform-origin: center;
}
.layer-svg > svg * {
  transform-origin: center;
}

/*
browser support
*/
.browser-support {
  max-width: 550px;
  padding: 1em;
  margin: 1em auto;
  background: var(--value-color);
  color: var(--text-color-disabled);
}
.browser-support ul {
  margin-top: 0;
}
.browser-support:empty {
  display: none;
}

/*******************\
 *                 *
\*******************/
.screen {
  background-color: #000;
  margin: auto;
  position: relative;
  max-height: 100%;
  max-width: 100%;
}

.screen > * {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: auto;
  width: 100%;
  height: 100%;
  transform-origin: center;
  will-change: opacity, transformation;
}

/*******************\
 *                 *
\*******************/

.tour {
  position: absolute;
  display: block;
  overflow: visible;
  top: 0;
  left: 0;
  z-index: 1000;
  --arrow-size: calc(var(--spacing) * 2);
  transition: top 0.532s ease,
              left 0.532s ease;
}


.tour:before {
  content: '';
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  z-index: 10;
}

.tour.up:before {
  border-left: var(--arrow-size) solid transparent;
  border-right: var(--arrow-size) solid transparent;

  border-bottom: var(--arrow-size) solid var(--highlight-color);

  top: 0;
  left: 50%;
  bottom: auto;
  right: auto;
  margin: 0 0 0 calc(var(--arrow-size) * -1);
}

.tour.down:before {
  border-left: var(--arrow-size) solid transparent;
  border-right: var(--arrow-size) solid transparent;

  border-top: var(--arrow-size) solid var(--highlight-color);

  top: auto;
  left: 50%;
  bottom: 0;
  right: auto;
  margin: 0 0 0 calc(var(--arrow-size) * -1);
}

.tour.right:before {
  border-top: var(--arrow-size) solid transparent;
  border-bottom: var(--arrow-size) solid transparent;

  border-left: var(--arrow-size) solid var(--highlight-color);

  top: 50%;
  left: auto;
  bottom: auto;
  right: 0;
  margin: calc(var(--arrow-size) * -1) 0 0 0;
}

.tour.left:before {
  border-top: var(--arrow-size) solid transparent;
  border-bottom: var(--arrow-size) solid transparent;

  border-right: var(--arrow-size) solid var(--highlight-color);

  top: 50%;
  left: 0;
  bottom: auto;
  right: auto;
  margin: calc(var(--arrow-size) * -1) 0 0 0;
}

.tour .wrapper {
  position: relative;
  color: var(--text-color);
  background-color: var(--highlight-color);
  border-radius: calc(var(--spacing) * 0.5);
  min-width: 5vmax;
  max-width: 45vmin;
  margin: 0;
  transition: margin 0.532s ease;
  z-index: 9;
}
.tour.up .wrapper {
  margin: var(--arrow-size) 0 0 0;
}
.tour.down .wrapper {
  margin: 0 0 var(--arrow-size) 0;
}
.tour.right .wrapper {
  margin: 0 var(--arrow-size) 0 0;
}
.tour.left .wrapper {
  margin: 0 0 0 var(--arrow-size);
}
.tour h3 {
  margin: 0;
  padding: var(--spacing);
  font-weight: 400;
}
.tour .text {
  font-size: 1.2rem;
  max-height: 20vmin;
  overflow: auto;
  padding: var(--spacing);
}
.tour .index {
  padding: var(--spacing);
  text-align: center;
}


/*******************\
 *                 *
\*******************/
.vf-app-name {
  display: block;
  cursor: pointer;
}
.vf-app-menu,
.vf-app-menu > .underlay,
.vf-app-menu > .inner {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
}
.vf-app-menu,
.vf-app-menu > .underlay {
  will-change: transform;
  transition: transform 0.218s ease;
}

.vf-app-menu {
  --menu-width: 45vw;
  width: var(--menu-width);
  transform: translateX(calc(0px - var(--menu-width)));
  z-index: 1000;
}
.vf-app-menu > .underlay {
  content: '';
  background-color: rgba(0, 0, 0, .75);
  width: 100vw;
  transform: translateX(-100vw);
  z-index: 800;
}

.vf-app-menu.opened,
.vf-app-menu.opened > .underlay {
  transform: translateX(0);
}

.vf-app-menu > button.vfi-cancel {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 1000;
}
.vf-app-menu > .inner {
  overflow: auto;
  padding: 30px calc(var(--spacing) * 2) calc(var(--spacing) * 2) calc(var(--spacing) * 2);
  right: 0;
  z-index: 900;
  background-color: var(--bg-color);
  border-right: 1px solid var(--border-color);
}