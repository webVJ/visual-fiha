@import "font/vf-embedded.css";

:root {
  --base-color: #fff;
  --bg-color: #272822;
  --bg-color-alt: #222;
  --text-color: #F8F8F2;
  --text-color-alt: #909083;
  --text-color-contrast: #272822;
  --text-color-disabled: #75715E;
  --yes-color: #A6E22E;
  --no-color: #F92672;
  --value-color: #E6DB74;
  --editable-color: #66D9EF;
  --highlight-color: #A581FF;
  --info-color: #e6db74;
  --border-color: #666;
  --spacing: .5rem;
  --spacing-neg: -0.5rem;
  --tabs-border-width: 2px;
}

*,
:after,
:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  vertical-align: middle;
  position: relative;
}
html,
body {
  margin: 0;
  padding: 0;
  line-height: calc(1em + (1 * var(--spacing)));
}

.index-page a,
.index-page a:link,
.index-page a:visited,
.test-page a,
.test-page a:link,
.test-page a:visited {
  color: var(--yes-color);
  text-decoration: none;
  box-shadow: 0 -1px 0 0 var(--bg-color) inset,
              0 -2px 0 0 currentColor inset;
  text-shadow: -3px 1px 0 var(--bg-color),
               3px 1px 0 var(--bg-color),
               -2px 1px 0 var(--bg-color),
               2px 1px 0 var(--bg-color),
               -1px 1px 0 var(--bg-color),
               1px 1px 0 var(--bg-color);
}

.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

.list-unstyled {
  padding: 0;
  list-style: none;
}
.list-inline {
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: row;
}
.list-inline li {
  flex-grow: 1;
  text-align: center;
}




/*
Form
*/
button,
select,
select option,
textarea,
[contenteditable=true],
input:not([type=checkbox]):not([type=radio]) {
  display: inline-block;
  line-height: inherit;
  font-size: inherit;
  padding: var(--spacing);
  margin: 0;
}
button,
select,
textarea,
[contenteditable=true],
input:not([type=checkbox]):not([type=radio]) {
  position: relative;
  color: currentColor;
  border: 1px solid transparent;
  background: transparent;
  box-shadow: 0 0 1px 0 currentColor inset;
}
select option {
  background-color: var(--bg-color);
}
button.no-border {
  border: none;
  box-shadow: none;
}
select,
textarea,
[contenteditable=true],
input:not([type=checkbox]):not([type=radio]) {
  color: var(--editable-color);
}
select[disabled],
textarea[disabled],
[contenteditable=true][disabled],
input[disabled]:not([type=checkbox]):not([type=radio]) {
  color: currentColor;
}


/*this might seems absurd... but the :not selector seems to have "weight"*/
input[type=search]:not([type=checkbox]):not([type=radio]) {
  border-radius: 4em;
  width: 100%;
  padding-left: 1em;
  padding-right: 1em;
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: var(--info-color);
}
input::-moz-placeholder,
textarea::-moz-placeholder {
  color: var(--info-color);
}
input::placeholder,
textarea::placeholder {
  color: var(--info-color);
}
/*
button:hover,
select:hover,
textarea:hover,
[contenteditable=true]:hover,
input:not([type=checkbox]):hover,
input:not([type=radio]):hover {

}

button:focus,
select:focus,
textarea:focus,
[contenteditable=true]:focus,
input:not([type=checkbox]):focus,
input:not([type=radio]):focus {

}

button:error,
select:error,
textarea:error,
[contenteditable=true].error,
input:not([type=checkbox]):error,
input:not([type=radio]):error {

*/
button {
  border-radius: 0.1em;
  cursor: pointer;
}
button[disabled] {
  cursor: not-allowed;
  color: var(--text-color-disabled);
}

button.default {
  background-color: var(--text-color);
  color: var(--text-color-contrast);
}

.yes {
  color: var(--yes-color);
}
.no {
  color: var(--no-color);
}
button.yes,
button.no {
  color: var(--text-color-contrast);
}
button.yes {
  border: 1px solid var(--yes-color);
  background-color: var(--yes-color);
}
button.no {
  border: 1px solid var(--no-color);
  background-color: var(--no-color);
}
input:not([type=radio]):not([type=checkbox]) {
  /* border-bottom: 1px dashed currentColor; */
}

/*
blinking
*/
.blink {
  animation-duration: 1.2s;
  animation-name: blink;
}
@keyframes blink {
  0% {
    box-shadow: 0 0 var(--spacing) var(--spacing) var(--highlight-color) inset;
  }

  33% {
    box-shadow: 0 0 0 0 var(--highlight-color) inset;
  }

  66% {
    box-shadow: 0 0 calc(var(--spacing) * 0.5) calc(var(--spacing) * 0.5) var(--highlight-color) inset;
  }

  100% {
    box-shadow: 0 0 0 0 var(--highlight-color) inset;
  }
}

/*
Grid
*/
.rows,
.columns {
  display: flex;
}

.rows > .row,
.columns > .column {
  position: relative;
}

.rows {
  flex-direction: column;
  overflow-x: auto;
}
.row {
  flex-grow: 1;
}

.row.columns {}

.columns {
  flex-direction: row;
  overflow-y: auto;
}
.column {
  flex-grow: 1;
}
.column.rows {}

.no-grow:empty {
  display: none;
}
.row.no-grow,
.column.no-grow {
  flex-grow: 0;
}
.row.grow-l,
.column.grow-l {
  flex-grow: 2;
}
.row.grow-xl,
.column.grow-xl {
  flex-grow: 3;
}

.table {
  display: table;
  table-layout: fixed;
}
.t-row {
  display: table-row;
}
.t-cell {
  display: table-cell;
}

.gutter:not(input) {
  padding: var(--spacing);
}
.gutter-left:not(input) {
  padding-left: var(--spacing);
}
.gutter-top:not(input) {
  padding-top: var(--spacing);
}
.gutter-horizontal:not(input) {
  padding-left: var(--spacing);
  padding-right: var(--spacing);
}
.gutter-right:not(input) {
  padding-right: var(--spacing);
}
.gutter-bottom:not(input) {
  padding-bottom: var(--spacing);
}
.gutter-vertical:not(input) {
  padding-top: var(--spacing);
  padding-bottom: var(--spacing);
}

input.gutter {
  margin: var(--spacing);
}
input.gutter-left {
  margin-left: var(--spacing);
}
input.gutter-top {
  margin-top: var(--spacing);
}
input.gutter-horizontal {
  margin-left: var(--spacing);
  margin-right: var(--spacing);
}
input.gutter-right {
  margin-right: var(--spacing);
}
input.gutter-bottom {
  margin-bottom: var(--spacing);
}
input.gutter-vertical {
  margin-top: var(--spacing);
  margin-bottom: var(--spacing);
}

.column > input:not([type=checkbox]):not([type=radio]),
.column > select,
.column > textarea {
  width: 100%;
  /* margin: calc(0 - var(--spacing)); */
}
.column > label:after {
}

/*
Layout
*/
.index-page,
.test-page,
.controller-app ,
.embedded-app {
  font-size: 13px;
  font-family: sans-serif;
  color: var(--text-color);
  background-color: var(--bg-color);
  font-weight: 400;
}
/*
SVG layer
*/
.layer-svg > svg {
  width: 100%;
  height: 100%;
  transform-origin: center;
}
.layer-svg > svg * {
  transform-origin: center;
}


/*******************\
 *                 *
\*******************/
.screen {
  background-color: #000;
  margin: auto;
  position: relative;
  max-height: 100%;
  max-width: 100%;

  image-rendering: optimizeSpeed;             /* STOP SMOOTHING, GIVE ME SPEED  */
  image-rendering: -moz-crisp-edges;          /* Firefox                        */
  image-rendering: -o-crisp-edges;            /* Opera                          */
  image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
  image-rendering: pixelated; /* Chrome */
  image-rendering: optimize-contrast;         /* CSS3 Proposed                  */
  -ms-interpolation-mode: nearest-neighbor;   /* IE8+                           */
}

.screen > * {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: auto;
  width: 100%;
  height: 100%;
  transform-origin: center;
  will-change: opacity, transformation;
}